#!/bin/bash

set -eE

PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
LOGTAG="RDS Backup"
SLACK_URL='https://hooks.slack.com/services/{{ slack_token }}'
DB_HOST="{{postgres_host | string}}"
DB_PORT={{postgres_port}}
DB_NAME="{{postgres_dbname | string}}"
DB_USER="{{postgres_user | string}}"
BACKUP_BUCKET="{{ backup_s3_bucket }}"
TIMESTAMP="$(date --utc +%Y-%m-%d-%H%M%S)"
BACKUPFILE="${DB_NAME}-${TIMESTAMP}.dump"

error_msg() {
    curl -s -X POST -H 'Content-type: application/json' --data '{"text":"RDS backup failed", "username": "Backup", "icon_emoji": ":boom:"}' ${SLACK_URL}
}

trap error_msg ERR

sleep $((RANDOM % 3600 + 1))

SCRIPT_START=$(date +%s)
logger -t "${LOGTAG}" "Starting"
cd /var/rds-backups
logger -t "${LOGTAG}" "Removing old backup files, if any"
rm -f *.dump
logger -t "${LOGTAG}" "Running pg_dump to ${BACKUPFILE}"
pg_dump -h ${DB_HOST} -p ${DB_PORT} -U ${DB_USER} -Fc > ${BACKUPFILE}
logger -t "${LOGTAG}" "Uploading ${BACKUPFILE} to S3"
aws s3 cp "${BACKUPFILE}" "s3://${BACKUP_BUCKET}/rds-backup/"
rm -f "${BACKUPFILE}"
curl -s -X POST -H 'Content-type: application/json' --data '{"text":"RDS backup completed successfully", "username": "Backup", "icon_emoji": ":thumbsup:"}' ${SLACK_URL}
SCRIPT_END=$(date +%s)
logger -t "${LOGTAG}" "Completed in $((SCRIPT_END-SCRIPT_START)) seconds"
exit 0
