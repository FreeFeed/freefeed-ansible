access_log /var/log/nginx/{{ pepyatka_hostname }}.log {{ nginx_use_proxy_protocol | ternary('elb_log', 'main') }};

{% if server_cert is defined %}
listen 443 ssl spdy {{ nginx_use_proxy_protocol | ternary('proxy_protocol', '') }};
listen [::]:443 ssl spdy {{ nginx_use_proxy_protocol | ternary('proxy_protocol', '') }};
add_header Strict-Transport-Security "max-age=31536000";
ssl on;
ssl_certificate /etc/nginx/ssl/api.pepyatka.crt;
ssl_certificate_key /etc/nginx/ssl/api.pepyatka.key;
ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
ssl_prefer_server_ciphers on;
{% if nginx_ssl_dhparam is defined %}
ssl_dhparam /etc/ssl/dhparams.pem;
{% endif %}
{% else %}
listen 80;
{% endif %}

{% if pepyatka_frontend_scheme == "https" and server_cert is not defined %}
if ($http_x_forwarded_proto = 'http') {
   return 301 https://$server_name$request_uri;
}
{% endif %}

gzip on;
gzip_comp_level 6;
gzip_vary on;
gzip_min_length  1000;
gzip_proxied any;
gzip_buffers 16 8k;

gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript;

# Disable logging for favicon
location = /favicon.ico {
  log_not_found off;
  access_log off;
}

# Disable logging for robots.txt
location = /robots.txt {
  return 200 "User-agent: *\nDisallow: /";
  log_not_found off;
  access_log off;
}

location /attachments/original/ {
  if ($request_method !~ ^(GET|HEAD)$ ) {
    return 405;
  }
  rewrite ^/attachments/original/(.*)$ https://{{ pepyatka_media_hostname }}/attachments/$1 permanent;
}

location /attachments/thumbnails/ {
  if ($request_method !~ ^(GET|HEAD)$ ) {
    return 405;
  }
  rewrite ^/attachments/(.*)$ https://{{ pepyatka_media_hostname }}/attachments/$1 permanent;
}

location /files/profilePictures/ {
  root {{ pepyatka_files_dir }};
  expires max;
  rewrite ^/files/(.*)$ /$1 break;
}

{% if nginx_restrict_users_ip is defined %}
location = /v1/users {
  allow {{ nginx_restrict_users_ip }};
  allow 127.0.0.1;
  deny all;
  proxy_http_version 1.1;
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection "upgrade";

  proxy_set_header X-Real-IP $remote_addr;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header Host $http_host;
  proxy_set_header X-NginX-Proxy true;

  proxy_pass http://app_pepyatka;
  proxy_redirect off;

  proxy_connect_timeout 5s;
  proxy_next_upstream_timeout 6s;
}
location = /v1/users/sudo {
  allow {{ nginx_restrict_users_ip }};
  allow 127.0.0.1;
  deny all;
  proxy_http_version 1.1;
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection "upgrade";

  proxy_set_header X-Real-IP $remote_addr;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header Host $http_host;
  proxy_set_header X-NginX-Proxy true;

  proxy_pass http://app_pepyatka;
  proxy_redirect off;

  proxy_connect_timeout 5s;
  proxy_next_upstream_timeout 6s;
}
location = /v1/groups/sudo {
  allow {{ nginx_restrict_users_ip }};
  allow 127.0.0.1;
  deny all;
  proxy_http_version 1.1;
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection "upgrade";

  proxy_set_header X-Real-IP $remote_addr;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header Host $http_host;
  proxy_set_header X-NginX-Proxy true;

  proxy_pass http://app_pepyatka;
  proxy_redirect off;

  proxy_connect_timeout 5s;
  proxy_next_upstream_timeout 6s;
}
{% endif %}

location ~ ^/(v1/|v2/|socket.io/) {
  proxy_http_version 1.1;
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection "upgrade";

  proxy_set_header X-Real-IP $remote_addr;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header Host $http_host;
  proxy_set_header X-NginX-Proxy true;

  proxy_pass http://app_pepyatka;
  proxy_redirect off;

  proxy_connect_timeout 5s;
  proxy_next_upstream_timeout 6s;
}

{% if crypto_private_enabled %}
location /cgi {
  proxy_http_version 1.1;
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection "upgrade";

  proxy_set_header X-Real-IP $remote_addr;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header Host $http_host;
  proxy_set_header X-NginX-Proxy true;

  proxy_pass http://crypto_private;
  proxy_redirect off;

  proxy_connect_timeout 10s;
}
{% endif %}
