---
# file: nginx/tasks/main.yml

- fail: msg="Nginx role is only supported for Ubuntu"
  when: ansible_distribution != 'Ubuntu'

- name: Ensure git is installed
  apt: name=git state=present
  tags:
    - pepyatka
    - nginx

- name: Check if pepyatka-html repo already exists
  stat: path=/var/www/pepyatka-html/.git
  register: pepyatka_html_dir
  tags:
    - pepyatka
    - nginx

- name: Initial deploy of pepyatka-html
  git:
    repo: "{{ pepyatka_html_repo }}"
    dest: /var/www/pepyatka-html
    version: "{{ pepyatka_html_branch }}"
  when: not pepyatka_html_dir.stat.exists
  register: pepyatka_html_init
  tags:
    - pepyatka
    - nginx

- name: Get pepyatka-html local version
  command: chdir=/var/www/pepyatka-html git rev-parse HEAD
  register: pepyatka_html_local_version
  tags:
    - pepyatka
    - nginx

- name: Fetch pepyatka-html remote
  command: chdir=/var/www/pepyatka-html git fetch origin
  tags:
    - pepyatka
    - nginx

- name: Get pepyatka-html version on remote
  command: chdir=/var/www/pepyatka-html git rev-parse origin/{{ pepyatka_html_branch }}
  register: pepyatka_html_remote_version
  tags:
    - pepyatka
    - nginx

- name: Update pepyatka-html
  git:
    repo: "{{ pepyatka_html_repo }}"
    update: yes
    dest: /var/www/pepyatka-html
    version: "{{ pepyatka_html_branch }}"
    force: yes
  register: pepyatka_html
  when: pepyatka_html_local_version.stdout != pepyatka_html_remote_version.stdout
  tags:
    - pepyatka
    - nginx

- name: Fix server name in public/js/config.js
  replace:
    dest: /var/www/pepyatka-html/public/js/config.js
    regexp: "host:.*"
    replace: "host: \"{{ pepyatka_use_ssl | ternary('https','http') }}://{{ pepyatka_hostname }}\","
  tags:
    - pepyatka
    - nginx

- name: Update version in public/index.html
  replace:
    dest: /var/www/pepyatka-html/public/index.html
    regexp: "v=.*"
    replace: "v={{ pepyatka_html_remote_version.stdout }}\""
  when: pepyatka_html.changed
  tags:
    - pepyatka
    - nginx

- name: Install jake
  npm: name=jake global=yes state=latest
  tags:
    - pepyatka
    - nginx

- name: Install pepyatka-html dependencies
  npm: path=/var/www/pepyatka-html
  when: pepyatka_html.changed or pepyatka_html_init.changed
  tags:
    - pepyatka
    - nginx

- name: Clean up dist
  file: path=/var/www/pepyatka-html/dist state=absent
  when: pepyatka_html.changed or pepyatka_html_init.changed
  tags:
    - pepyatka
    - nginx

- name: Compile css
  command: chdir=/var/www/pepyatka-html jake themes
  when: pepyatka_html.changed or pepyatka_html_init.changed
  tags:
    - pepyatka
    - nginx

- name: Compile js
  command: chdir=/var/www/pepyatka-html jake compile
  when: pepyatka_html.changed or pepyatka_html_init.changed
  tags:
    - pepyatka
    - nginx

- name: Copy main.js
  command: cp /var/www/pepyatka-html/dist/main.js /var/www/pepyatka-html/public/js/main.js
  when: pepyatka_html.changed or pepyatka_html_init.changed
  tags:
    - pepyatka
    - nginx

- name: Copy config.js
  command: cp /var/www/pepyatka-html/dist/config.js /var/www/pepyatka-html/public/js/config.js
  when: pepyatka_html.changed or pepyatka_html_init.changed
  tags:
    - pepyatka
    - nginx

- name: Fix pepyatka-html permissions
  file:
    path: /var/www/pepyatka-html
    owner: "{{ www_user }}"
    group: "{{ www_group }}"
    state: directory
    recurse: yes
  tags:
    - pepyatka
    - nginx

- name: Add nginx apt repository
  apt_repository: repo='ppa:nginx/stable' state=present
  tags:
    - pepyatka
    - nginx

- name: Install nginx
  apt: name=nginx state=present update_cache=true
  tags:
    - pepyatka
    - nginx

- name: Ensure /etc/nginx/ssl
  file: path=/etc/nginx/ssl state=directory
  tags:
    - pepyatka
    - nginx

- name: Deploy server certificate
  copy:
    content="{{ server_cert }}"
    dest=/etc/nginx/ssl/api.pepyatka.crt
    mode=0600
  when: server_cert is defined
  tags:
    - pepyatka
    - nginx

- name: Ensure nginx has access to pepyatka files
  file:
    path: "{{ pepyatka_files_dir }}"
    group: "{{ www_group }}"
    state: directory
    recurse: yes
    mode: 0775
  tags:
    - pepyatka
    - nginx

- name: Deploy nginx config
  template: src=nginx.conf.j2 dest=/etc/nginx/nginx.conf
  tags:
    - pepyatka
    - nginx

- name: Start and enable nginx
  service: name=nginx state=started enabled=yes
  tags:
    - pepyatka
    - nginx

- name: Reload nginx config
  service: name=nginx state=reloaded
  tags:
    - pepyatka
    - nginx

- name: Ensure nginx is up and running
  wait_for: host=localhost port={{ pepyatka_use_ssl | ternary(443, 80) }} timeout=30 state=started
  tags:
    - pepyatka
    - nginx

