"use strict";

var fs = require('fs')
var nodemailer = require('nodemailer')
{% if pepyatka_mailer_smtp_enabled %}
var transport = require('nodemailer-smtp-transport')
{% else %}
var transport = {
  name: 'minimal',
  version: '0.1.0',
  send: function(mail, callback) {
    var input = mail.message.createReadStream();
    input.pipe(process.stdout);
    input.on('end', function() {
      callback(null, true)
    })
  }
}
{% endif %}

exports.getConfig = function() {
  var config = {
    port: 3000,
    database: 2,

    secret: '{{ pepyatka_secret }}',

    origin: '{{ pepyatka_origin }}',

    serviceName: '{{ pepyatka_service_name }}',
    appRoot: '{{ pepyatka_home_dir}}/pepyatka-server',
    acceptHashedPasswordsOnly: {{ pepyatka_accept_hashed_passwords_only }},
    logLevel: 'warn'
  }

  config.host = '{{ pepyatka_frontend_scheme }}://{{ pepyatka_hostname }}'

  var defaultStopList = [
    'anonymous', 'public', 'about', 'signin', 'logout',
    'signup', 'filter', 'settings', 'account', 'groups',
    'friends', 'list', 'search', 'summary', 'share', '404',
    'iphone', 'attachments', 'files', 'profilepics'
  ];

  var bannedUsers = fs.readFileSync('pepyatka-server/config/banlist.txt').toString()
                      .split("\n")
                      .filter(function(n) { return n != '' })

  config.application = {
    DEFAULT_STOP_LIST: defaultStopList,
    USERNAME_STOP_LIST: defaultStopList.concat(bannedUsers)
  }

  config.media = {
    // Public URL prefix
    url: '{{ pepyatka_frontend_scheme }}://{{ pepyatka_media_hostname }}/', // must have trailing slash

    // File storage
    storage: {
      // 'fs' for local file system or 's3' for AWS S3
      type: '{{ pepyatka_storage_type }}',

      // Parameters for 'fs'
      rootDir: '{{ pepyatka_files_dir }}/', // must have trailing slash

      // Parameters for 's3'
      accessKeyId: '{{ pepyatka_aws_access_key }}',
      secretAccessKey: '{{ pepyatka_aws_secret_key }}',
      bucket: '{{ pepyatka_s3_bucket }}'
    }
  }
  config.attachments = {
    url: config.media.url,
    storage: config.media.storage,
    path: 'attachments/', // must have trailing slash
    fileSizeLimit: '{{ pepyatka_file_size_limit }}'
  }
  config.thumbnails = {
    url: config.media.url,
    storage: config.media.storage,
    path: 'attachments/thumbnails/' // must have trailing slash
  }
  config.profilePictures = {
    // Profile pictures only support 'fs' for the time being, so we won't use shared values by default
    url: config.host + '/',
    storage: {
      type: 'fs',
      rootDir: config.media.storage.rootDir
    },
    path: 'profilepics/' // must have trailing slash
  }

  config.mailer = {
    transport: transport,
    fromName: '{{ pepyatka_mailer_from_name }}',
    fromEmail: '{{ pepyatka_mailer_from_email }}',
    resetPasswordMailSubject: '{{ pepyatka_service_name }} password reset',
    host: '{{ pepyatka_frontend_scheme }}://{{ pepyatka_hostname}}',
    options: {
{% if pepyatka_mailer_smtp_enabled %}
      host: '{{ pepyatka_mailer_smtp_host }}',
      port: {{ pepyatka_mailer_smtp_port }},
      secure: {{ pepyatka_mailer_smtp_secure }},
      auth: {
          user: '{{ pepyatka_mailer_smtp_user }}',
          pass: '{{ pepyatka_mailer_smtp_pass }}'
      }
{% endif %}
    }
  }

  config.redis = {
    host: '{{ pepyatka_redis_host }}',
    port: {{ pepyatka_redis_port }},
    options: {
      retry_max_delay: 2000,
      connect_timeout: 5000,
      max_attempts: 2
    }
  }

  return config
}
