---

- set_fact:
    server_containers: []

- set_fact:
    server_containers: "{{ server_containers + ['freefeed-server-'+item] }}"
  with_sequence: count="{{ freefeed_server_instances }}"

- set_fact:
    server_links: "{{ item }}:{{ item }}"
  with_items: "{{ server_containers }}"

- name: Ensure /etc/freefeed
  become: yes
  file:
    path: /etc/freefeed
    state: directory

- name: Render nginx config
  become: yes
  template: src="{{ item }}.j2" dest="/etc/freefeed/{{ item }}"
  loop:
    - nginx.conf
    - freefeed-common.conf
  register: nginx_conf

- name: Pull images
  become: yes
  docker_image:
    name: "{{ item }}"
    source: pull
    state: present
    force_source: yes
  loop:
    - "{{ react_client_image }}"
    - "{{ vanilla_image }}"
    - "nginx:latest"
  register: pull_images

- name: Delete containers
  become: yes
  docker_container:
    name: "{{ item }}"
    state: absent
    force_kill: yes
  loop:
    - nginx
    - freefeed-react-client
    - vanilla
  when: pull_images.changed or nginx_conf.changed

- name: Create freefeed-react-client container
  become: yes
  docker_container:
    name: freefeed-react-client
    image: "{{ react_client_image }}"
    command: echo
    state: present

- name: Create vanilla container
  become: yes
  docker_container:
    name: vanilla
    image: "{{ vanilla_image }}"
    command: echo
    state: present

- name: Start nginx container
  become: yes
  docker_container:
    name: nginx
    image: nginx:latest
    volumes_from:
      - freefeed-react-client
      - vanilla
    published_ports:
      - 8080:80
    volumes:
      - /etc/freefeed/nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/freefeed/freefeed-common.conf:/etc/nginx/freefeed-common.conf:ro
    networks:
      - name: freefeed
    state: started
    restart_policy: on-failure

