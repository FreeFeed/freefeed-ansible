#!/bin/bash -xe

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin

BASE_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
cd $BASE_DIR >/dev/null
SCRIPT_FILE=$(basename ${BASH_SOURCE[0]})
echo
echo "=== $SCRIPT_FILE is starting at $(date) ==="

USE_FORCE_LUKE=no
if [[ $# = 1 ]] && [[ $1 = "--force" ]]; then
    echo "Using force"
    USE_FORCE_LUKE=yes
fi

# $1 = repo, $2 = branch
check_repo() {
    pushd $1 >/dev/null
    git fetch origin
    LOCAL=$(git rev-parse $2)
    REMOTE=$(git rev-parse origin/$2)
    if [ $LOCAL != $REMOTE ]; then
        echo "$1 is outdated, git pull and re-deploy"
        git pull origin $2
        STATUS=updated
    else
        echo "$1 is up-to-date"
        STATUS=fresh
    fi
    popd >/dev/null
    echo $STATUS
}

SERVER_STATUS=$(check_repo pepyatka-server {{ pepyatka_server_branch }})
HTML_STATUS=$(check_repo pepyatka-html {{ pepyatka_html_branch }})
ANSIBLE_STATUS=$(check_repo pepyatka-ansible {{ pepyatka_ansible_branch }})

if [[ $SERVER_STATUS == updated ]] || [[ $HTML_STATUS == updated ]] || [[ $ANSIBLE_STATUS == updated ]] || [[ $USE_FORCE_LUKE == yes ]]; then
    cd pepyatka-ansible >/dev/null
{% if vault_password_file is defined %}
    ansible-playbook -i {{ pepyatka_deploy_inventory }} playbooks/site.yml --connection=local --vault-password-file=/root/pepyatka.vault
{% else %}
    ansible-playbook -i {{ pepyatka_deploy_inventory }} playbooks/site.yml --connection=local
{% endif %}
    echo "=== done at $(date) ==="
fi
